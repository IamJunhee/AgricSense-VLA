lifecycle_manager_localization:
  ros__parameters:
    use_sim_time: true
    autostart: true
    node_names:
      - map_server
      # - amcl

lifecycle_manager_navigation:
  ros__parameters:
    use_sim_time: true
    autostart: true
    node_names:
      - controller_server
      - planner_server
      - bt_navigator
      - behavior_server
      - smoother_server
      - waypoint_follower

depthimage_to_laserscan:
  ros__parameters:
    use_sim_time: true
    scan_time: 0.033
    range_min: 0.03
    range_max: 20.0
    scan_height: 1
    output_frame: zed_2i_left_lens_gazebo
    depth_topic: /zed/depth/image_raw
    camera_info_topic: /zed/depth/camera_info
    output_topic: /zed/scan

amcl:
  ros__parameters:
    use_sim_time: True
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    first_map_only: true
    base_frame_id: "base_link"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 20.0
    laser_min_range: 0.1
    laser_model_type: "likelihood_field"
    max_beams: 60
    max_particles: 2000
    min_particles: 500
    odom_frame_id: "odom"
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: nav2_amcl::DifferentialMotionModel
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: true
    transform_tolerance: 1.0
    update_min_a: 0.2
    update_min_d: 0.25
    z_hit: 0.8
    z_max: 0.05
    z_rand: 0.2
    z_short: 0.05
    scan_topic: /zed/scan
    initial_pose.x: 0.0
    initial_pose.y: 0.0
    initial_pose.yaw: 0.0
    initial_pose.z: 0.0
    set_initial_pose: true


amcl_map_client:
  ros__parameters:
    use_sim_time: True

amcl_rclcpp_node:
  ros__parameters:
    use_sim_time: True

# ✅ 업데이트된 nav2_zed.yaml
# bt_navigator:
#   ros__parameters:
#     use_sim_time: true
#     global_frame: map
#     robot_base_frame: base_link
#     odom_topic: /odometry/global
#     default_nav_through_poses_bt_xml: navigate_through_poses_w_replanning_and_recovery.xml
#     default_nav_to_pose_bt_xml: navigate_to_pose_w_replanning_and_recovery.xml
#     default_bt_xml_filename: "navigate_w_replanning_and_recovery.xml"
#     plugin_lib_names:
#     - nav2_compute_path_to_pose_action_bt_node
#     - nav2_compute_path_through_poses_action_bt_node
#     - nav2_follow_path_action_bt_node
#     - nav2_back_up_action_bt_node
#     - nav2_spin_action_bt_node
#     - nav2_wait_action_bt_node
#     - nav2_clear_costmap_service_bt_node
#     - nav2_is_stuck_condition_bt_node
#     - nav2_goal_reached_condition_bt_node
#     - nav2_goal_updated_condition_bt_node
#     - nav2_initial_pose_received_condition_bt_node
#     - nav2_reinitialize_global_localization_service_bt_node
#     - nav2_rate_controller_bt_node
#     - nav2_distance_controller_bt_node
#     - nav2_speed_controller_bt_node
#     - nav2_truncate_path_action_bt_node
#     - nav2_goal_updater_node_bt_node
#     - nav2_recovery_node_bt_node
#     - nav2_pipeline_sequence_bt_node
#     - nav2_round_robin_node_bt_node
#     - nav2_transform_available_condition_bt_node
#     - nav2_time_expired_condition_bt_node
#     - nav2_distance_traveled_condition_bt_node
#     - nav2_single_trigger_bt_node
#     - nav2_is_battery_low_condition_bt_node
#     - nav2_navigate_through_poses_action_bt_node
#     - nav2_navigate_to_pose_action_bt_node
#     - nav2_remove_passed_goals_action_bt_node
#     - nav2_planner_selector_bt_node
#     - nav2_controller_selector_bt_node
#     - nav2_goal_checker_selector_bt_node
#     - nav2_path_longer_on_approach_bt_node
#     - nav2_controller_cancel_bt_node
bt_navigator:
  ros__parameters:
    use_sim_time: true
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /odometry/global
    default_bt_xml_filename: "navigate_w_replanning_and_recovery.xml"  # or "navigate.xml"
    navigators: ["navigate_to_pose", "navigate_through_poses"]
    navigate_to_pose:
      plugin: "nav2_bt_navigator/NavigateToPoseNavigator"
    navigate_through_poses:
      plugin: "nav2_bt_navigator/NavigateThroughPosesNavigator"
    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_compute_path_through_poses_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_truncate_path_action_bt_node
      - nav2_goal_updater_node_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_distance_traveled_condition_bt_node
      - nav2_single_trigger_bt_node
      - nav2_is_battery_low_condition_bt_node
      - nav2_navigate_through_poses_action_bt_node
      - nav2_navigate_to_pose_action_bt_node
      - nav2_remove_passed_goals_action_bt_node
      - nav2_planner_selector_bt_node
      - nav2_controller_selector_bt_node
      - nav2_goal_checker_selector_bt_node
      - nav2_path_longer_on_approach_bt_node
      - nav2_controller_cancel_bt_node

bt_navigator_rclcpp_node:
  ros__parameters:
    use_sim_time: true


bt_navigator_rclcpp_node:
  ros__parameters:
    use_sim_time: True

controller_server:
  ros__parameters:
    use_sim_time: true
    odom_topic: /odometry/global
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.3
    controller_plugins: ["FollowPath"]
    progress_checker_plugin: "progress_checker"
    goal_checker_plugin: "goal_checker"
    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0
    # Goal checker parameters
    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      # yaw_goal_tolerance: 0.25
      stateful: True

    FollowPath:
      plugin: "nav2_rotation_shim_controller::RotationShimController"
      primary_controller: "dwb_core::DWBLocalPlanner"

      angular_dist_threshold: 0.785
      forward_sampling_distance: 0.7
      rotate_to_heading_angular_vel: 1.8
      max_angular_accel: 6.0
      simulate_ahead_time: 5.0

      # Velocity constraints
      debug_trajectory_details: true
      min_vel_x: 0.0
      max_vel_x: 0.6
      min_vel_y: 0.0
      max_vel_y: 0.0
      min_vel_theta: 0.0
      max_vel_theta: 1.0
      min_speed_xy: 0.0
      max_speed_xy: 0.6
      min_speed_theta: 0.0
      acc_lim_x: 2.5
      acc_lim_y: 0.0
      acc_lim_theta: 3.2
      decel_lim_x: -2.5
      decel_lim_y: 0.0
      decel_lim_theta: -3.2
      vx_samples: 20
      vy_samples: 5
      vtheta_samples: 20
      sim_time: 1.7
      linear_granularity: 0.05
      angular_granularity: 0.025
      transform_tolerance: 0.2
      xy_goal_tolerance: 0.25
      trans_stopped_velocity: 0.25
      short_circuit_trajectory_evaluation: true
      stateful: true

      critics:
        - BaseObstacle
        - RotateToGoal
        - Oscillation
        - GoalAlign
        - PathAlign
        - PathDist
        - GoalDist

      BaseObstacle.scale: 0.02
      GoalAlign.forward_point_distance: 0.1
      GoalAlign.scale: 24.0
      GoalDist.scale: 24.0
      PathAlign.forward_point_distance: 0.1
      PathAlign.scale: 32.0
      PathDist.scale: 32.0
      RotateToGoal.lookahead_time: -1.0
      RotateToGoal.scale: 32.0
      RotateToGoal.slowing_factor: 5.0

    # FollowPath:
    #   plugin: "nav2_mppi_controller::MPPIController"
    #   time_steps: 56
    #   model_dt: 0.05
    #   batch_size: 2000
    #   vx_std: 0.4
    #   wz_std: 0.8
    #   vx_max: 0.6
    #   wz_max: 1.8
    #   vx_min: -0.35
    #   wz_min: -1.8
    #   iteration_count: 1
    #   prune_distance: 1.7
    #   transform_tolerance: 0.1
    #   allow_reversing: true
    #   reset_period: 1.0
    #   goal_radius: 0.25
    #   trajectory_point_step: 1
    #   max_robot_pose_search_dist: 3.0
    #   visualize: true
    #   critics: [
    #     "ConstraintCritic", 
    #     "GoalCritic", 
    #     "PathFollowCritic", 
    #     "PathAlignCritic", 
    #     "ObstaclesCritic", 
    #     "PreferForwardCritic"
    #   ]

    #   ConstraintCritic:
    #     enabled: true

    #   GoalCritic:
    #     enabled: true
    #     goal_radius: 0.3

    #   PathFollowCritic:
    #     enabled: true
    #     trajectory_point_step: 1

    #   PathAlignCritic:
    #     enabled: true
    #     offset_from_furthest: 3

    #   ObstaclesCritic:
    #     enabled: true
    #     consider_footprint: true

    #   PreferForwardCritic:
    #     enabled: true


    # FollowPath:
    #   plugin: nav2_rotation_shim_controller::RotationShimController
    #   primary_controller: dwb_core::DWBLocalPlanner
    #   # Rotation Shim
    #   angular_dist_threshold: 0.785
    #   forward_sampling_distance: 0.7
    #   rotate_to_heading_angular_vel: 1.8
    #   max_angular_accel: 6.0
    #   simulate_ahead_time: 5.0
    #   # DWB
    #   debug_trajectory_details: true
    #   min_vel_x: 0.0
    #   min_vel_y: 0.0
    #   max_vel_x: 0.6
    #   max_vel_y: 0.0
    #   max_vel_theta: 1.0
    #   min_speed_xy: 0.0
    #   max_speed_xy: 0.6
    #   min_speed_theta: 0.1
    #   acc_lim_x: 2.5
    #   acc_lim_y: 0.0
    #   acc_lim_theta: 1.0
    #   decel_lim_x: -2.5
    #   decel_lim_y: 0.0
    #   decel_lim_theta: -3.2
    #   vx_samples: 20
    #   vy_samples: 5
    #   vtheta_samples: 20
    #   sim_time: 1.7
    #   linear_granularity: 0.05
    #   angular_granularity: 0.025
    #   transform_tolerance: 0.2
    #   xy_goal_tolerance: 0.05
    #   trans_stopped_velocity: 0.25
    #   short_circuit_trajectory_evaluation: true
    #   stateful: true
    #   critics:
    #   - BaseObstacle
    #   - RotateToGoal
    #   - Oscillation
    #   - GoalAlign
    #   - PathAlign
    #   - PathDist
    #   - GoalDist
    #   # - ObstacleFootprint
    #   # ObstacleFootprint.scale: 32.0
    #   BaseObstacle.scale: 0.2
    #   GoalAlign.forward_point_distance: 0.1
    #   GoalAlign.scale: 24.0
    #   GoalDist.scale: 24.0
    #   PathAlign.forward_point_distance: 0.1
    #   PathAlign.scale: 32.0
    #   PathDist.scale: 32.0
    #   RotateToGoal.lookahead_time: -1.0
    #   RotateToGoal.scale: 32.0
    #   RotateToGoal.slowing_factor: 5.0


controller_server_rclcpp_node:
  ros__parameters:
    use_sim_time: True

# local_costmap:
#   local_costmap:
#     ros__parameters:
#       use_sim_time: true
#       always_send_full_costmap: true
#       robot_radius: 0.2
#       global_frame: odom
#       robot_base_frame: base_link
#       rolling_window: true
#       width: 5
#       height: 5
#       resolution: 0.05
#       plugins: ["obstacle_layer", "inflation_layer"]

#       obstacle_layer:
#         plugin: "nav2_costmap_2d::ObstacleLayer"
#         enabled: true
#         observation_sources: zed_scan

#         # zed_points:
#         #   topic: /zed/points
#         #   data_type: PointCloud2
#         #   marking: true
#         #   clearing: true
#         #   obstacle_range: 5.0
#         #   raytrace_range: 5.5
#         #   max_obstacle_height: 2.0

#         zed_scan:
#           topic: /zed/scan
#           data_type: LaserScan
#           marking: true
#           clearing: true
#           obstacle_range: 2.5
#           raytrace_range: 3.0
#           max_obstacle_height: 2.0

#       inflation_layer:
#         plugin: "nav2_costmap_2d::InflationLayer"
#         inflation_radius: 0.4
#         cost_scaling_factor: 2.5

local_costmap:
  local_costmap:
    ros__parameters:
      use_sim_time: true
      update_frequency: 5.0
      publish_frequency: 2.0
      always_send_full_costmap: true
      robot_radius: 0.2
      global_frame: odom
      robot_base_frame: base_link
      rolling_window: true
      width: 5
      height: 5
      resolution: 0.05
      plugins: ["obstacle_layer",  "inflation_layer"]

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        observation_sources: zed_scan

        # zed_points:
        #   topic: /zed/points
        #   data_type: PointCloud2
        #   marking: true
        #   clearing: true
        #   obstacle_range: 4.5
        #   raytrace_range: 5.0
        #   max_obstacle_height: 2.0

        zed_scan:
          topic: /zed/scan
          data_type: LaserScan
          marking: true
          clearing: true
          obstacle_range: 4.5
          raytrace_range: 5.0
          max_obstacle_height: 2.0

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        inflation_radius: 0.3
        cost_scaling_factor: 10.0
        
  local_costmap_client:
    ros__parameters:
      use_sim_time: True
  local_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: True

# global_costmap:
#   global_costmap:
#     ros__parameters:
#       use_sim_time: true
#       update_frequency: 1.0
#       publish_frequency: 1.0
#       robot_radius: 0.2
#       global_frame: map
#       robot_base_frame: base_link
#       width: 50
#       height: 50
#       resolution: 0.1
#       plugins: ["static_layer", "obstacle_layer", "inflation_layer"]

#       obstacle_layer:
#         plugin: "nav2_costmap_2d::ObstacleLayer"
#         enabled: true
#         observation_sources: zed_scan

#         # zed_points:
#         #   topic: /zed/points
#         #   data_type: PointCloud2
#         #   marking: true
#         #   clearing: true
#         #   obstacle_range: 5.0
#         #   raytrace_range: 5.5
#         #   max_obstacle_height: 2.0

#         zed_scan:
#           topic: /zed/scan
#           data_type: LaserScan
#           marking: true
#           clearing: true
#           obstacle_range: 5.0
#           raytrace_range: 5.5
#           max_obstacle_height: 2.0

#       inflation_layer:
#         plugin: "nav2_costmap_2d::InflationLayer"
#         cost_scaling_factor: 2.0
#         inflation_radius: 0.7

#       static_layer:
#         plugin: "nav2_costmap_2d::StaticLayer"
#         map_subscribe_transient_local: true
#         subscribe_to_updates: true
#         enabled: true

global_costmap:
  global_costmap:
    ros__parameters:
      use_sim_time: true
      always_send_full_costmap: True
      update_frequency: 1.0
      publish_frequency: 1.0
      robot_radius: 0.2
      global_frame: map
      robot_base_frame: base_link
      rolling_window: True
      width: 50
      height: 50
      resolution: 0.1
      plugins: ["static_layer","obstacle_layer", "inflation_layer"]
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: true
        subscribe_to_updates: true
        enabled: true
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        observation_sources: zed_scan

        # zed_points:
        #   topic: /zed/points
        #   data_type: PointCloud2
        #   marking: true
        #   clearing: true
        #   obstacle_range: 5.0
        #   raytrace_range: 5.5
        #   max_obstacle_height: 2.0

        zed_scan:
          topic: /zed/scan
          data_type: LaserScan
          marking: true
          clearing: true
          obstacle_range: 4.5
          raytrace_range: 5.0
          max_obstacle_height: 2.0

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 7.5
        inflation_radius: 0.3

  global_costmap_client:
    ros__parameters:
      use_sim_time: True
  global_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: True

map_server:
  ros__parameters:
    use_sim_time: True
    yaml_filename: "/home/jun/jackal_ws/src/jackal/jackal_navigation/maps/agricsense_field.yaml"

# map_saver:
#   ros__parameters:
#     use_sim_time: True
#     save_map_timeout: 5000
#     free_thresh_default: 0.25
#     occupied_thresh_default: 0.65
#     map_subscribe_transient_local: False


map_saver:
  ros__parameters:
    use_sim_time: True
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    use_sim_time: True
    planner_plugins: ["GridBased"]
    odom_topic: /odometry/global
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5
      use_astar: true
      allow_unknown: true

smoother_server:
  ros__parameters:
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True

planner_server_rclcpp_node:
  ros__parameters:
    use_sim_time: True

recoveries_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    recovery_plugins: ["spin", "back_up", "wait"]
    spin:
      plugin: "nav2_recoveries/Spin"
    back_up:
      plugin: "nav2_recoveries/BackUp"
    wait:
      plugin: "nav2_recoveries/Wait"
    global_frame: odom
    robot_base_frame: base_link
    transform_timeout: 0.1
    use_sim_time: true
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

behavior_server:
  ros__parameters:
    local_costmap_topic: local_costmap/costmap_raw
    global_costmap_topic: global_costmap/costmap_raw
    local_footprint_topic: local_costmap/published_footprint
    global_footprint_topic: global_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
    wait:
      plugin: "nav2_behaviors/Wait"
    assisted_teleop:
      plugin: "nav2_behaviors/AssistedTeleop"
    local_frame: odom
    global_frame: map
    robot_base_frame: base_link
    transform_tolerance: 0.1
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

waypoint_follower:
  ros__parameters:
    loop_rate: 20
    stop_on_failure: false
    use_sim_time: true
    wait_at_waypoint:
      enabled: true
      plugin: nav2_waypoint_follower::WaitAtWaypoint
      waypoint_pause_duration: 200
    waypoint_task_executor_plugin: wait_at_waypoint

behavior_server:
  ros__parameters:
    use_sim_time: true

velocity_smoother:
  ros__parameters:
    deadband_velocity:
    - 0.0
    - 0.0
    - 0.0
    feedback: OPEN_LOOP
    max_accel:
    - 2.5
    - 0.0
    - 3.2
    max_decel:
    - -2.5
    - 0.0
    - -3.2
    max_velocity:
    - 0.26
    - 0.0
    - 1.0
    min_velocity:
    - -0.26
    - 0.0
    - -1.0
    odom_duration: 0.1
    odom_topic: /odometry/global
    scale_velocities: false
    smoothing_frequency: 20.0
    use_sim_time: true
    velocity_timeout: 1.0


