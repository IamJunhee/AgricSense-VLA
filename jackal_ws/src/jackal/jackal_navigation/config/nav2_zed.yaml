lifecycle_manager_localization:
  ros__parameters:
    use_sim_time: true
    autostart: true
    node_names:
      - map_server
      - amcl

lifecycle_manager_navigation:
  ros__parameters:
    use_sim_time: true
    autostart: true
    node_names:
      - controller_server
      - planner_server
      - bt_navigator
      - behavior_server
      - smoother_server
      - waypoint_follower

depthimage_to_laserscan:
  ros__parameters:
    use_sim_time: true
    scan_time: 0.033
    range_min: 0.3
    range_max: 20.0
    scan_height: 20
    output_frame: zed_2i_left_lens_gazebo
    depth_topic: /zed/depth/image_raw
    camera_info_topic: /zed/depth/camera_info
    output_topic: /zed/scan

amcl:
  ros__parameters:
    use_sim_time: True
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    first_map_only: true
    base_frame_id: "base_link"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 20.0
    laser_min_range: 0.1
    laser_model_type: "likelihood_field"
    max_beams: 60
    max_particles: 2000
    min_particles: 500
    odom_frame_id: "odom"
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: nav2_amcl::DifferentialMotionModel
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: true
    transform_tolerance: 1.0
    update_min_a: 0.2
    update_min_d: 0.25
    z_hit: 0.8
    z_max: 0.05
    z_rand: 0.2
    z_short: 0.05
    scan_topic: /zed/scan
    initial_pose.x: 0.0
    initial_pose.y: 0.0
    initial_pose.yaw: 0.0
    initial_pose.z: 0.0
    set_initial_pose: true


amcl_map_client:
  ros__parameters:
    use_sim_time: True

amcl_rclcpp_node:
  ros__parameters:
    use_sim_time: True

# ✅ 업데이트된 nav2_zed.yaml
# bt_navigator:
#   ros__parameters:
#     use_sim_time: true
#     global_frame: map
#     robot_base_frame: base_link
#     odom_topic: /odometry/filtered
#     default_nav_through_poses_bt_xml: navigate_through_poses_w_replanning_and_recovery.xml
#     default_nav_to_pose_bt_xml: navigate_to_pose_w_replanning_and_recovery.xml
#     default_bt_xml_filename: "navigate_w_replanning_and_recovery.xml"
#     plugin_lib_names:
#     - nav2_compute_path_to_pose_action_bt_node
#     - nav2_compute_path_through_poses_action_bt_node
#     - nav2_follow_path_action_bt_node
#     - nav2_back_up_action_bt_node
#     - nav2_spin_action_bt_node
#     - nav2_wait_action_bt_node
#     - nav2_clear_costmap_service_bt_node
#     - nav2_is_stuck_condition_bt_node
#     - nav2_goal_reached_condition_bt_node
#     - nav2_goal_updated_condition_bt_node
#     - nav2_initial_pose_received_condition_bt_node
#     - nav2_reinitialize_global_localization_service_bt_node
#     - nav2_rate_controller_bt_node
#     - nav2_distance_controller_bt_node
#     - nav2_speed_controller_bt_node
#     - nav2_truncate_path_action_bt_node
#     - nav2_goal_updater_node_bt_node
#     - nav2_recovery_node_bt_node
#     - nav2_pipeline_sequence_bt_node
#     - nav2_round_robin_node_bt_node
#     - nav2_transform_available_condition_bt_node
#     - nav2_time_expired_condition_bt_node
#     - nav2_distance_traveled_condition_bt_node
#     - nav2_single_trigger_bt_node
#     - nav2_is_battery_low_condition_bt_node
#     - nav2_navigate_through_poses_action_bt_node
#     - nav2_navigate_to_pose_action_bt_node
#     - nav2_remove_passed_goals_action_bt_node
#     - nav2_planner_selector_bt_node
#     - nav2_controller_selector_bt_node
#     - nav2_goal_checker_selector_bt_node
#     - nav2_path_longer_on_approach_bt_node
#     - nav2_controller_cancel_bt_node
bt_navigator:
  ros__parameters:
    use_sim_time: true
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /odometry/filtered
    default_bt_xml_filename: "navigate_w_replanning_and_recovery.xml"  # or "navigate.xml"

    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_compute_path_through_poses_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_truncate_path_action_bt_node
      - nav2_goal_updater_node_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_distance_traveled_condition_bt_node
      - nav2_single_trigger_bt_node
      - nav2_is_battery_low_condition_bt_node
      - nav2_navigate_through_poses_action_bt_node
      - nav2_navigate_to_pose_action_bt_node
      - nav2_remove_passed_goals_action_bt_node
      - nav2_planner_selector_bt_node
      - nav2_controller_selector_bt_node
      - nav2_goal_checker_selector_bt_node
      - nav2_path_longer_on_approach_bt_node
      - nav2_controller_cancel_bt_node

bt_navigator_rclcpp_node:
  ros__parameters:
    use_sim_time: true


bt_navigator_rclcpp_node:
  ros__parameters:
    use_sim_time: True

controller_server:
  ros__parameters:
    use_sim_time: true
    odom_topic: /odometry/filtered
    controller_frequency: 10.0
    controller_plugins: ["FollowPath"]
    progress_checker_plugin: "progress_checker"
    goal_checker_plugin: "goal_checker"
    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0
    # Goal checker parameters
    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25
      stateful: True
    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      min_vel_x: 0.1
      max_vel_x: 0.6
      min_vel_theta: 0.1
      max_vel_theta: 1.0
      acc_lim_x: 1.5
      acc_lim_theta: 3.2
      decel_lim_theta: 3.2
      max_rot_vel: 1.0
      min_rot_vel: 0.2
      vx_samples: 20
      vtheta_samples: 40
      sim_time: 1.0
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]


controller_server_rclcpp_node:
  ros__parameters:
    use_sim_time: True

local_costmap:
  local_costmap:
    ros__parameters:
      use_sim_time: true
      always_send_full_costmap: true
      robot_radius: 0.2
      global_frame: map
      robot_base_frame: base_link
      rolling_window: true
      width: 5
      height: 5
      resolution: 0.05
      plugins: ["obstacle_layer", "inflation_layer"]

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        observation_sources: zed_scan

        # zed_points:
        #   topic: /zed/points
        #   data_type: PointCloud2
        #   marking: true
        #   clearing: true
        #   obstacle_range: 5.0
        #   raytrace_range: 5.5
        #   max_obstacle_height: 2.0

        zed_scan:
          topic: /zed/scan
          data_type: LaserScan
          marking: true
          clearing: true
          obstacle_range: 5.0
          raytrace_range: 5.5
          max_obstacle_height: 2.0

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        inflation_radius: 0.4
        
  local_costmap_client:
    ros__parameters:
      use_sim_time: True
  local_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: True

global_costmap:
  global_costmap:
    ros__parameters:
      use_sim_time: true
      robot_radius: 0.2
      global_frame: map
      robot_base_frame: base_link
      width: 50
      height: 50
      resolution: 0.1
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        observation_sources: zed_scan

        # zed_points:
        #   topic: /zed/points
        #   data_type: PointCloud2
        #   marking: true
        #   clearing: true
        #   obstacle_range: 5.0
        #   raytrace_range: 5.5
        #   max_obstacle_height: 2.0

        zed_scan:
          topic: /zed/scan
          data_type: LaserScan
          marking: true
          clearing: true
          obstacle_range: 5.0
          raytrace_range: 5.5
          max_obstacle_height: 2.0

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        inflation_radius: 0.4

      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: true
        subscribe_to_updates: true
        enabled: true

  global_costmap_client:
    ros__parameters:
      use_sim_time: True
  global_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: True

map_server:
  ros__parameters:
    use_sim_time: True
    yaml_filename: "/home/jun/jackal_ws/src/jackal/jackal_navigation/maps/tomato.yaml"

map_saver:
  ros__parameters:
    use_sim_time: True
    save_map_timeout: 5000
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: False

planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    use_sim_time: True
    planner_plugins: ["GridBased"]
    odom_topic: /odometry/filtered
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5
      use_astar: false
      allow_unknown: true

planner_server_rclcpp_node:
  ros__parameters:
    use_sim_time: True

recoveries_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    recovery_plugins: ["spin", "back_up", "wait"]
    spin:
      plugin: "nav2_recoveries/Spin"
    back_up:
      plugin: "nav2_recoveries/BackUp"
    wait:
      plugin: "nav2_recoveries/Wait"
    global_frame: odom
    robot_base_frame: base_link
    transform_timeout: 0.1
    use_sim_time: true
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

robot_state_publisher:
  ros__parameters:
    use_sim_time: True

